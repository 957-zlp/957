np.repeat(a,n)    将a中的每个元素重复n遍得到一个新的数组
np.tile(a,n)    将a这个数组重复n遍得到新的数组，与上一个函数的不同在于排列顺序
np.interset1d（a,b)    得到两个数组共同拥有的唯一数值
np.setdiff1d(a,b)       From 'a' remove all of 'b' 从a中移除b中含有的元素，同时如果a中有重复的元素也会移除
np.where(条件)，若条件满足，返回索引值
np.where(条件，x，y)    若条件满足，返回x，否则返回y
numpy.logical_and/or/not/xor(x1, x2)    返回两个数组各种逻辑运算后的布尔值
某些函数不能作用于数组，将其用np.vectorize函数处理之后，可以得到一个向量化的函数，此函数的作用是为数组中的每一个值调用该函数

numpy.random.uniform(low,high,size)功能：从一个均匀分布[low,high)中随机采样，注意定义域是左闭右开，即包含low，不包含high.
参数介绍:low: 采样下界，float类型，默认值为0；high: 采样上界，float类型，默认值为1；size: 输出样本数目，为int或元组(tuple)类型，
例如，size=(m,n,k), 则输出m*n*k个样本，缺省时输出1个值。返回值：ndarray类型，其形状和参数size中描述一致。
   
a. randint: 原型：numpy.random.randint(low, high=None, size=None, dtype='l')，产生随机整数；
b. random_integers: 原型： numpy.random.random_integers(low, high=None, size=None)，在闭区间上产生随机整数；
c. random_sample: 原型： numpy.random.random_sample(size=None)，在[0.0,1.0)上随机采样；
d. random: 原型： numpy.random.random(size=None)，和random_sample一样，是random_sample的别名；
e. rand: 原型： numpy.random.rand(d0, d1, ..., dn)，产生d0 - d1 - ... - dn形状的在[0,1)上均匀分布的float型数。
f. randn: 原型：numpy.random.randn（d0,d1,...,dn),产生d0 - d1 - ... - dn形状的标准正态分布的float型数。

np.set_printoptions    设置输出样式，比如精度，阈值等等

numpy.random.seed()函数可使得随机数具有预见性，即当参数相同时使得每次生成的随机数相同；
当参数不同或者无参数时，作用与numpy.random.rand()函数相同，即多次生成随机数且每次生成的随机数都不同。

np.ptp()   轴方向上的最大值与最小值之差
numpy.percentile(a, q, axis=None, out=None, overwrite_input=False)     在指定轴上计算分位数   Parameters a : np数组q : float in range of [0,100] (or sequence of floats)Percentile to compute。要计算的q分位数。
axis : 那个轴上运算。keepdims :bool是否保持维度不变。

np.isnan()   返回一串布尔值组成的数组
如何去掉有缺失值的行：arr[np.sum(np.isnan(arr), axis = 1) == 0]

numpy中axis的理解：将其视为执行操作的轴方向，即合并时为堆叠的方向，计算时为折叠的轴，一维数组只有横向的0轴

np.corrcoef() 计算皮尔逊相关系数，接受的参数是一个矩阵,返回的结果也是一个矩阵  返回的矩阵结果 r[i][j] 分别为第 i 组数据和第 j 组数据的皮尔逊积矩相关系数
np.isnan()  返回一个布尔值的矩阵
np.any()    np.all()    返回true or false
np.unique(b,return_index=True，return_inverse=True，return_counts=True，axis=)   对于一维数组或者列表，unique函数去除其中重复的元素，并按元素由大到小返回一个新的无重复元素的数组或者列表，
return_index=True表示返回新列表元素在旧列表中的位置，return_inverse=True 表示返回旧列表元素在新列表中的位置
返回去重后的新矩阵中元素在原矩阵中相应的出现次数
arr.astype("dtype")   转换数据类型
numpy.digitize(x, bins, right = False)参数：x : numpy数组    bins :一维单调数组，必须是升序或者降序  right：间隔是否包含最右  返回值：x在bins中的位置。
np.newaxis   添加新的轴，可用于将一维数组转换为竖向排列，或者相反的操作
numpy.random.choice(a, size=None, replace=True, p=None)  从a(只要是ndarray都可以，但必须是一维的)中随机抽取数字，并组成指定大小(size)的数组
replace:True表示可以取相同数字，False表示不可以取相同数字 数组p：与数组a相对应，表示取数组a中每个元素的概率，默认为选取每个元素的概率相同。
np.argmax(arr)   arr中数值最大的元素对应的位置
numpy.argsort(a, axis=, kind=’quicksort’, order=None) 功能: 将矩阵a按照axis排序，并返回排序后的下标 参数: a:输入矩阵， axis:需要排序的维度
返回值: 输出排序后的下标   此函数可用于排序(二维数组中按照某一行进行排序）或者取最大最小值
np.sort()函数的作用是对给定的数组的元素进行排序  a：需要排序的数组  axis：指定按什么排序，默认axis = 1 按行排序， axis = 0 按列排序
ravel()  将多维数据拉平到一维
